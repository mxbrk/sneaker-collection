generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Collection {
  id            String    @id @default(uuid())
  userId        String
  sneakerId     String
  sku           String
  brand         String
  title         String
  colorway      String
  image         String?
  sizeUS        String
  sizeEU        String?
  sizeUK        String?
  condition     String
  purchaseDate  DateTime?
  retailPrice   Float?
  purchasePrice Float?
  notes         String?
  labels        String[]  // Add this field for storing labels
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([sneakerId])
}
model Wishlist {
  id        String   @id @default(uuid())
  userId    String
  sneakerId String
  sku       String
  brand     String
  title     String
  colorway  String
  image     String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([sneakerId])
}

model User {
  id             String       @id @default(uuid())
  email          String       @unique
  passwordHash   String
  username       String?
  showKidsShoes  Boolean      @default(true)
  genderFilter   String       @default("both") // Add this line - default is "both"
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  sessions       Session[]
  collections    Collection[]
  wishlists      Wishlist[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String // Added token field
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
